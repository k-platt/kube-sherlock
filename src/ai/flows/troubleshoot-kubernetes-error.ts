// This file is generated by Firebase Studio.

'use server';

/**
 * @fileOverview A Kubernetes error troubleshooting AI agent.
 *
 * - troubleshootKubernetesError - A function that handles the kubernetes error troubleshooting process.
 * - TroubleshootKubernetesErrorInput - The input type for the troubleshootKubernetesError function.
 * - TroubleshootKubernetesErrorOutput - The return type for the troubleshootKubernetesError function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const TroubleshootKubernetesErrorInputSchema = z.object({
  errorMessage: z.string().describe('The Kubernetes error message or event description to analyze.'),
});
export type TroubleshootKubernetesErrorInput = z.infer<typeof TroubleshootKubernetesErrorInputSchema>;

const TroubleshootKubernetesErrorOutputSchema = z.object({
  potentialCauses: z.array(z.string()).describe('An array of potential causes for the error.'),
  suggestedSolutions: z.array(z.string()).describe('An array of suggested solutions to resolve the error.'),
});
export type TroubleshootKubernetesErrorOutput = z.infer<typeof TroubleshootKubernetesErrorOutputSchema>;

export async function troubleshootKubernetesError(input: TroubleshootKubernetesErrorInput): Promise<TroubleshootKubernetesErrorOutput> {
  return troubleshootKubernetesErrorFlow(input);
}

const prompt = ai.definePrompt({
  name: 'troubleshootKubernetesErrorPrompt',
  input: {schema: TroubleshootKubernetesErrorInputSchema},
  output: {schema: TroubleshootKubernetesErrorOutputSchema},
  prompt: `You are a Kubernetes expert specializing in troubleshooting errors. Analyze the provided error message or event description to determine potential causes and suggest solutions.

Error Message/Event Description: {{{errorMessage}}}

Provide your output in JSON format.
`,
});

const troubleshootKubernetesErrorFlow = ai.defineFlow(
  {
    name: 'troubleshootKubernetesErrorFlow',
    inputSchema: TroubleshootKubernetesErrorInputSchema,
    outputSchema: TroubleshootKubernetesErrorOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
